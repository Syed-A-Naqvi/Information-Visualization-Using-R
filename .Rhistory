ggplot(mpg, aes(x = displ, y = hwy, )) +
geom_point( size = 2) +
facet_wrap(vars(cty))
head(mph)
head(mpg)
#### 3. Individual geoms ####
d <- tibble(
x = c(2,7,5,12),
y = c(4.2, 9.7, 6.1, 8),
label = c("a", "b", "c", "d")
)
ggplot(d, aes(x = x, y = y, label = label )) +
labs(x=NULL, y = NULL) + # hide axis label
theme(plot.title = element_text(size = 12))
p1 <- p + geom_point() + ggtitle("point")
d <- tibble(
x = c(2,7,5,12),
y = c(4.2, 9.7, 6.1, 8),
label = c("a", "b", "c", "d")
)
p <- ggplot(d, aes(x = x, y = y, label = label )) +
labs(x=NULL, y = NULL) + # hide axis label
theme(plot.title = element_text(size = 12))
p1 <- p + geom_point() + ggtitle("point")
p2 <- p + geom_text() + ggtitle("text")
p3 <- p + geom_bar(stat = "identity") + ggtitle("bar")
p4 <- p + geom_title() + ggtitle("raster")
p4 <- p + geom_tile() + ggtitle("raster")
p5 <- p + geom_line() + ggtitle("line")
p6 <- p + geom_area() + ggtitle("area")
p7 <- p + geom_path() + ggtitle("line")
p8 <- p + geom_plygon() + ggtitle("polygon")
p1
p2
p1
d <- tibble(
x = c(2,7,5,12),
y = c(4.2, 9.7, 6.1, 8),
label = c("a", "b", "f", "d")
)
p <- ggplot(d, aes(x = x, y = y, label = label )) +
labs(x=NULL, y = NULL) + # hide axis label
theme(plot.title = element_text(size = 12))
p1 <- p + geom_point() + ggtitle("point")
p2 <- p + geom_text() + ggtitle("text")
p3 <- p + geom_bar(stat = "identity") + ggtitle("bar")
p4 <- p + geom_tile() + ggtitle("raster")
p5 <- p + geom_line() + ggtitle("line")
p6 <- p + geom_area() + ggtitle("area")
p7 <- p + geom_path() + ggtitle("line")
p8 <- p + geom_plygon() + ggtitle("polygon")
p8 <- p + geom_polygon() + ggtitle("polygon")
p1
p2
d <- tibble(
x = c(2,7,5,12),
y = c(4.2, 9.7, 6.1, 8),
label = c("a", "b", "c", "d")
)
p <- ggplot(d, aes(x = x, y = y, label = label )) +
labs(x=NULL, y = NULL) + # hide axis label
theme(plot.title = element_text(size = 12))
p1 <- p + geom_point() + ggtitle("point")
p2 <- p + geom_text() + ggtitle("text")
p3 <- p + geom_bar(stat = "identity") + ggtitle("bar")
p4 <- p + geom_tile() + ggtitle("raster")
p5 <- p + geom_line() + ggtitle("line")
p6 <- p + geom_area() + ggtitle("area")
p7 <- p + geom_path() + ggtitle("line")
p8 <- p + geom_polygon() + ggtitle("polygon")
p1
p2
p3
p4
p5
p6
p7
p8
p5 <- p + geom_line() + ggtitle("line") + ylim(c(0,10))
p5
p5 <- p + geom_line() + ggtitle("line") + ylim(c(0,10)) + xlim(c(0,10))
p5
p5 <- p + geom_line() + ggtitle("line")
p5
p5 <- p + geom_line() + ggtitle("line") + ylim(c(0,10)) + xlim(c(0,10))
p5
p5 <- p + geom_line() + ggtitle("line") + ylim(c(0,10)) + xlim(c(-1,10))
p5
p5 <- p + geom_line() + ggtitle("line")
p5
p7 <- p + geom_path() + ggtitle("line")
p5 <- p + geom_line() + ggtitle("line")
p6 <- p + geom_area() + ggtitle("area")
p7 <- p + geom_path() + ggtitle("line")
p5
p5 <- p + geom_line() + ggtitle("line") + xlim(c(0,5))
p5
p5 <- p + geom_line() + ggtitle("line") + xlim(c(0,10))
p5
p5 <- p + geom_line() + ggtitle("line") + ylim(c(0,10)) + xlim(c(0,10))
p5
p5
p5 <- p + geom_line() + ggtitle("line") + ylim(c(0,10)) + xlim(c(0,13))
p5
p5 <- p + geom_line() + ggtitle("line")
p5
data(Oxboys, package = "nlme")
head(Oxboys)
Oxboys |>
fileter(Subject == 1)
Oxboys |>
filter(Subject == 1)
data(Oxboys, package = "nlme")
head(Oxboys)
Oxboys |>
filter(Subject == 1)
Oxboys |>
filter(Oxboys$Subject == 1)
head(Oxboys)
Oxboys |>
filter(Oxboys$Subject == 1)
Oxboys |>
filter(Subject == 1)
Oxboys |> filter(Subject == 1)
data(Oxboys, package = "nlme")
head(Oxboys)
Oxboys |> filter(Subject == 1)
#initializing environment
graphics.off()
rm(list=ls())
library(tidyverse)
#### 1. Aesthetics ####
# Color
ggplot(mpg, aes(displ,hwy, colour = class, alpha = hwy))+
geom_point(size=3)
# Shape
ggplot(mpg, aes(displ,hwy, shape=drv))+
geom_point(size=3)
# Size
ggplot(mpg, aes(displ,hwy, size=cyl))+
geom_point()
# Alpha Transparency
ggplot(faithfuld, aes(waiting,eruptions, alpha = density))+
geom_raster(fill="maroon")
# Line Type
ggplot(diamonds, aes(x=depth, fill=cut, colour=cut, linetype=cut)) +
geom_density(alpha = 0.2, na.rm = TRUE) +
xlim(58,68) +
labs(title="Distribution (Kernel Density Estimate) of diamonds dataset")
# coding challenge 1
ggplot(mpg, aes(x = displ, y = hwy, )) +
geom_point( size = 2) +
facet_wrap(vars(class))
# class discussion, what happens when you try to facet by a continuous variable
ggplot(mpg, aes(x = displ, y = hwy, )) +
geom_point( size = 2) +
facet_wrap(vars(class))
d <- tibble(
x = c(2,7,5,12),
y = c(4.2, 9.7, 6.1, 8),
label = c("a", "b", "c", "d")
)
p <- ggplot(d, aes(x = x, y = y, label = label )) +
labs(x=NULL, y = NULL) + # hide axis label
theme(plot.title = element_text(size = 12))
p1 <- p + geom_point() + ggtitle("point")
p2 <- p + geom_text() + ggtitle("text")
p3 <- p + geom_bar(stat = "identity") + ggtitle("bar")
p4 <- p + geom_tile() + ggtitle("raster")
p5 <- p + geom_line() + ggtitle("line")
p6 <- p + geom_area() + ggtitle("area")
p7 <- p + geom_path() + ggtitle("line")
p8 <- p + geom_polygon() + ggtitle("polygon")
data(Oxboys, package = "nlme")
head(Oxboys)
Oxboys |> filter(Subject == 1)
#initializing environment
graphics.off()
#Coding challenge 2
Oxboys |>
ggplot(aes(x=age,y=height))+
geom_point() |>
show()
#Coding challenge 2
Oxboys |>
ggplot(aes(x=age,y=height))+
geom_point()
#line plot
Oxboys |>
ggplot(aes(x=age,y=height))+
geom_line()
view(Oxboys)
Oxboyx |>
ggplot(aes(x=age, y=height, group = Subject)) +
geom_point() +
geom_line() +
geom_smooth()
Oxboys |>
ggplot(aes(x=age, y=height, group = Subject)) +
geom_point() +
geom_line() +
geom_smooth()
Oxboys |>
ggplot(aes(x=age, y=height, group = Subject)) +
geom_point() +
geom_line() +
Oxboys |>
ggplot(aes(x=age, y=height, group = Subject)) +
geom_point() +
geom_line()
Oxboys |>
ggplot(aes(x=age, y=height, group = Subject)) +
geom_point() +
geom_line()
Oxboys |>
ggplot(aes(x=age, y=height, group = Subject)) +
geom_point() +
geom_line(aes(colour = Subject))
Oxboys |>
ggplot(aes(x=age, y=height, group = Subject, colour=Subject)) +
geom_point() +
geom_line()
Oxboys |>
ggplot(aes(x=age, y=height)) +
geom_point(aes(group = Subject, colour=Subject)) +
geom_line(aes(group = Subject, colour=Subject)) +
geom_smooth()
Oxboys |>
ggplot(aes(x=age, y=height)) +
geom_point(aes(colour=Subject)) +
geom_line(aes(colour=Subject)) +
geom_smooth()
Oxboys |>
ggplot(aes(x=age, y=height)) +
geom_point() +
geom_line() +
geom_smooth()
Oxboys |>
ggplot(aes(x=age, y=height)) +
geom_point(aes(colour=Subject)) +
geom_line(aes(colour=Subject)) +
geom_smooth()
# Coding challenge 3
Oxboys |>
ggplot(aes(x=Occasion, y=height)) +
geom_boxplot() +
geom_line(colour = Subject)
# Coding challenge 3
Oxboys |>
ggplot(aes(x=Occasion, y=height)) +
geom_boxplot() +
geom_line(colour = Subject)
# Coding challenge 3
Oxboys |>
ggplot(aes(x=Occasion, y=height)) +
geom_boxplot() +
geom_line(aes(colour = Subject))
# Coding challenge 3
Oxboys |>
ggplot(aes(x=Occasion, y=height)) +
geom_boxplot() +
geom_line(aes(x=age, y=height, colour = Subject))
# Coding challenge 3
Oxboys |>
ggplot(aes(x=Occasion, y=height)) +
geom_boxplot() +
geom_line(aes(x=age*9, y=height, colour = Subject))
# Coding challenge 3
Oxboys |>
ggplot(aes(y=height)) +
geom_boxplot(aes(x=Occasion)) +
geom_line(aes(x=age, colour = Subject))
# Coding challenge 3
Oxboys |>
ggplot(aes(y=height)) +
geom_line(aes(x=age, colour = Subject)) +
geom_boxplot(aes(x=Occasion))
# Coding challenge 3
Oxboys |>
ggplot(aes(x=Occasion, y=height)) +
geom_boxplot() +
geom_line(aes(group = Subject, colour = subject))
# Coding challenge 3
Oxboys |>
ggplot(aes(x=Occasion, y=height)) +
geom_boxplot() +
geom_line(aes(group = Subject, colour = Subject))
View(p1)
# for summarized data either use geom_bar(stat="identity") or geom_col()
# this will plot a bar for each occurrence along the x axis with a height
# equal to the corresponding value in another variable along the y axis
mpg |>
ggplot(aes(x = manufacturer)) +
geom_bar(stat="identity")
# for summarized data either use geom_bar(stat="identity") or geom_col()
# this will plot a bar for each occurrence along the x axis with a height
# equal to the corresponding value in another variable along the y axis
mpg |>
ggplot(aes(x = manufacturer)) +
geom_bar()
drug_results |>
ggplot(aes(x=drug, y=effect))+
geom_col()
# for summarized data either use geom_bar(stat="identity") or geom_col()
# this will plot a bar for each occurrence along the x axis with a height
# equal to the corresponding value in another variable along the y axis
drug_results <- tribble( ~drug, ~effect,
"a", 4.2,
"b", 9.7,
"c", 6.1)
drug_results |>
ggplot(aes(x=drug, y=effect))+
geom_col()
?economics
economics |>
ggplot(aes(x=date, y=uempmed)) |>
geom_line()
economics |>
ggplot(aes(x=date, y=uempmed)) |>
geom_line()
economics |>
ggplot(aes(x=date, y=uempmed)) +
geom_line()
?facet
??facet
?pivot_longer
?facet_wrap
economics <- economics |>
mutate(unemprate = uempmed/pop) |>
pivot_longer(cols = c(enemprate,uempmed), names_to = "variables", values_to = "values") |>
ggplot(aes(x = date, y = values)) +
geom_line() +
facet_wrap(vars(variables))
economics |>
ggplot(aes(x = date, y = values)) +
geom_line() +
facet_wrap(vars(variables))
economics <- economics |>
mutate(unemprate = uempmed/pop) |>
pivot_longer(cols = c(enemprate,uempmed), names_to = "variables", values_to = "values")
economics <- economics |>
mutate(unemprate = uempmed/pop) |>
pivot_longer(cols = c(enemprate,uempmed), names_to = "variables", values_to = "values")
?economics
economics <- economics |>
mutate(unemprate = unemploy/pop) |>
pivot_longer(cols = c(enemprate,uempmed), names_to = "variables", values_to = "values")
economics <- economics |>
mutate(unemprate = unemploy/pop) |>
pivot_longer(cols = c(unemprate,uempmed), names_to = "variables", values_to = "values")
economics |>
ggplot(aes(x = date, y = values)) +
geom_line() +
facet_wrap(vars(variables))
view(economics)
#initializing environment
graphics.off()
rm(list=ls())
library(tidyverse)
#### 1. Aesthetics ####
# Color
ggplot(mpg, aes(displ,hwy, colour = class, alpha = hwy))+
geom_point(size=3)
# Shape
ggplot(mpg, aes(displ,hwy, shape=drv))+
geom_point(size=3)
# Size
ggplot(mpg, aes(displ,hwy, size=cyl))+
geom_point()
# Alpha Transparency
ggplot(faithfuld, aes(waiting,eruptions, alpha = density))+
geom_raster(fill="maroon")
# Line Type
ggplot(diamonds, aes(x=depth, fill=cut, colour=cut, linetype=cut)) +
geom_density(alpha = 0.2, na.rm = TRUE) +
xlim(58,68) +
labs(title="Distribution (Kernel Density Estimate) of diamonds dataset")
# coding challenge 1
ggplot(mpg, aes(x = displ, y = hwy, )) +
geom_point( size = 2) +
facet_wrap(vars(class))
# class discussion, what happens when you try to facet by a continuous variable
ggplot(mpg, aes(x = displ, y = hwy, )) +
geom_point( size = 2) +
facet_wrap(vars(class))
d <- tibble(
x = c(2,7,5,12),
y = c(4.2, 9.7, 6.1, 8),
label = c("a", "b", "c", "d")
)
p <- ggplot(d, aes(x = x, y = y, label = label )) +
labs(x=NULL, y = NULL) + # hide axis label
theme(plot.title = element_text(size = 12))
p1 <- p + geom_point() + ggtitle("point")
p2 <- p + geom_text() + ggtitle("text")
p3 <- p + geom_bar(stat = "identity") + ggtitle("bar")
p4 <- p + geom_tile() + ggtitle("raster")
p5 <- p + geom_line() + ggtitle("line")
p6 <- p + geom_area() + ggtitle("area")
p7 <- p + geom_path() + ggtitle("line")
p8 <- p + geom_polygon() + ggtitle("polygon")
data(Oxboys, package = "nlme")
head(Oxboys)
Oxboys |> filter(Subject == 1)
#scatter plot
Oxboys |>
ggplot(aes(x=age,y=height)) +
geom_point() +
geom_line() +
ggtitle("We should have connected each person by a line instead of all people of the same age")
# instead of group we can also use color in this case as colouring by subject will force the creating
# of seperate lines per individual
Oxboys |>
ggplot(aes(x=age, y=height)) +
geom_point(aes(colour=Subject)) +
geom_line(aes(colour=Subject)) +
geom_smooth()
# Coding challenge 3
Oxboys |>
ggplot(aes(x=Occasion, y=height)) +
geom_boxplot() +
geom_line(aes(group = Subject, colour = Subject))
# geom_bar
# for unsummarized data, each observation of a an occurrence contributes a count of 1 which
# geom_bar() will sum and display as the occurrence bar height
mpg |>
ggplot(aes(x = manufacturer)) +
geom_bar()
# for summarized data either use geom_bar(stat="identity") or geom_col()
# this will plot a bar for each occurrence along the x axis with a height
# equal to the corresponding value in another variable along the y axis
drug_results <- tribble( ~drug, ~effect,
"a", 4.2,
"b", 9.7,
"c", 6.1)
drug_results |>
ggplot(aes(x=drug, y=effect))+
geom_col()
economics1 <- economics |>
mutate(unemprate = unemploy/pop) |>
view(economics)
economics |>
ggplot(aes(x = date, y = uempemd)) +
geom_line()
economics1 |>
ggplot(aes(x=date, y=uempmed)) +
geom_line()
economics |>
ggplot(aes(x = date, y = uempemd)) +
geom_line()
?economics
economics1 |>
ggplot(aes(x=date, y=unemprate)) +
geom_line()
economics1 <- economics |>
mutate(unemprate = unemploy/pop) |>
economics |>
ggplot(aes(x = date, y = uempemd)) +
geom_line() +
ggtitle("Median Unemployment Duration in Weeks")
economics1 <- economics |>
mutate(unemprate = unemploy/pop)
economics |>
ggplot(aes(x = date, y = uempemd)) +
geom_line() +
ggtitle("Median Unemployment Duration in Weeks")
economics1 <- economics |>
mutate(unemprate = unemploy/pop)
economics |>
ggplot(aes(x = date, y = uempemd)) +
geom_line() +
ggtitle("Median Unemployment Duration in Weeks")
economics |>
ggplot(aes(x = date, y = uempmed)) +
geom_line() +
ggtitle("Median Unemployment Duration in Weeks")
economics1 |>
ggplot(aes(x=date, y=unemprate)) +
geom_line() +
ggtitle("Unemployment Percentage %")
# coding challenge 1
economics1 |>
ggplot(aes(x=unemprate, y=uempmed)) +
geom_point(aes(color = date)) +
geom_path(color="grey")
# coding challenge 1
economics1 |>
ggplot(aes(x=unemprate, y=uempmed)) +
geom_path(color="grey") +
geom_point(aes(color = date))
# coding challenge 1
economics1 |>
ggplot(aes(x=unemprate, y=uempmed)) +
geom_path(color="grey") +
geom_point(aes(color = date)) +
# modify labels
xlab("Unemployment Rate") +
ylab("Median Unemployment Duration in Weeks")
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(colour = class))
# for the above plot, this is what is happening in the background:
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(colour = class)) +
scale_x_continuous() +
scale_y_continuous() +
scale_colour_continuous()
# for the above plot, this is what is happening in the background:
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(colour = class)) +
scale_x_continuous() +
scale_y_continuous() +
scale_colour_discrete()
