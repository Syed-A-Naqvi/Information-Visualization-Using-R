getwd()
?rename
#setup workspace
graphics.off()
rm(list=ls())
# 1
# loading required libraries
library(tidyverse)
library(readxl)
?rename
# 3
# renaming columns 1 and 3
d |>
rename(d[,1] = month) |>
# 1
# loading required libraries
library(tidyverse)
library(readxl)
# 2
# loading the data skipping first 5 lines of input
d <- read_xlsx("./bc_trade.xlsx", skip = 5)
# 3
# renaming columns 1 and 3
d |>
rename(d[,1] = month) |>
view(d)
# 3
# renaming columns 1 and 3
d |>
rename(month = 1) |>
rename(energy = 3)
names(d)
is.vector(names(d))
rm(list=ls())
# 1
# loading required libraries
library(tidyverse)
library(readxl)
# 2
# loading the data skipping first 5 lines of input
d <- read_xlsx("./bc_trade.xlsx", skip = 5)
# 3
# extracting the current names for columns 1 and 3
old_names <- names(d)[c(1,3)]
# 3
# extracting the current names for columns 1 and 3
old_names <- names(d)[c(1,3)]
# renaming columns 1 and 3
d |>
rename(month = old_names[1]) |>
rename(energy = old_names[3])
#setup workspace
graphics.off()
rm(list=ls())
# 1
# loading required libraries
library(tidyverse)
library(readxl)
# 2
# loading the data skipping first 5 lines of input
d <- read_xlsx("./bc_trade.xlsx", skip = 5)
# 3
# extracting the current names for columns 1 and 3
old_names <- names(d)[c(1,3)]
# renaming columns 1 and 3
d |>
rename(month = old_names[1]) |>
rename(energy = old_names[3])
old_names
# 3
# extracting the current names for columns 1 and 3
old_names <- names(d)[c(1,3)]
# renaming columns 1 and 3
d |>
rename(month = old_names[1]) |>
rename(energy = old_names[2])
?vector
d
# 3
# extracting the current names for columns 1 and 3
old_names <- names(d)[c(1,3)]
# renaming columns 1 and 3
d <- d |>
rename(month = old_names[1]) |>
rename(energy = old_names[2])
# 4.
color_codes <- rep("#cccccc", times = length(d$month))
d$month[c(Jun,Jul,Aug)]
d$month[c("Jun","Jul","Aug")]
class(d$month)
# for those indices in color_codes matching the row numbers in the d$month
# column containing Jun, Jul or Aug, we set a value of "firebrick"
color_codes[d$month == Jun | d$month == Jul | d$month = Aug] <- "firebrick"
# for those indices in color_codes matching the row numbers in the d$month
# column containing Jun, Jul or Aug, we set a value of "firebrick"
color_codes[d$month == Jun | d$month == Jul | d$month == Aug] <- "firebrick"
d$month
d$month == "Jun" | d$month == "Jul" | d$month == "Aug"
# for those indices in color_codes matching the row numbers in the d$month
# column containing Jun, Jul or Aug, we set a value of "firebrick"
color_codes[d$month == "Jun" | d$month == "Jul" | d$month == "Aug"] <- "firebrick"
color_codes
# 5.
# creating the bar graph
d$energy |>
barplot(names.arg = d$month,
col = color_codes,
xlab = "Month", ylab = "Exports ($ thousands)",
main = "British Columbia Energy Exports", space = 0)
?border
# 5.
# creating the bar graph
d$energy |>
barplot(names.arg = d$month,
col = color_codes, border = NA,
xlab = "Month", ylab = "Exports ($ thousands)",
main = "British Columbia Energy Exports")
# 5.
# creating the bar graph
d$energy |>
barplot(names.arg = d$month,
col = color_codes,
xlab = "Month", ylab = "Exports ($ thousands)",
main = "British Columbia Energy Exports")
# 5.
# creating the bar graph
d$energy |>
barplot(names.arg = d$month,
col = color_codes, border = "#cccccc"
xlab = "Month", ylab = "Exports ($ thousands)",
# 5.
# creating the bar graph
d$energy |>
barplot(names.arg = d$month,
col = color_codes, border = "#cccccc",
xlab = "Month", ylab = "Exports ($ thousands)",
main = "British Columbia Energy Exports")
# for those indices in color_codes matching the row numbers in the d$month
# column containing Jun, Jul or Aug, we set a value of "firebrick"
color_codes[d$month == "Jun" | d$month == "Jul" | d$month == "Aug"] <- "firebrick"
# 5.
# creating the bar graph
d$energy |>
barplot(names.arg = d$month,
col = color_codes,
xlab = "Month", ylab = "Exports ($ thousands)",
main = "British Columbia Energy Exports")
# 5.
# creating the bar graph
d$energy |>
barplot(names.arg = d$month,
col = color_codes, border = NA,
xlab = "Month", ylab = "Exports ($ thousands)",
main = "British Columbia Energy Exports")
# 5.
# creating the bar graph
d$energy |>
barplot(names.arg = d$month,
col = color_codes, border = "#cccccc",
xlab = "Month", ylab = "Exports ($ thousands)",
main = "British Columbia Energy Exports")
# 5.
# creating the bar graph
d$energy |>
barplot(names.arg = d$month,
col = color_codes, border = color_codes,
xlab = "Month", ylab = "Exports ($ thousands)",
main = "British Columbia Energy Exports")
# 5.
# creating the bar graph
d$energy |>
barplot(names.arg = d$month,
col = color_codes, border = color_codes,
xlab = "Month", ylab = "Exports ($ thousands)",
main = "British Columbia Energy Exports")
#setup workspace
graphics.off()
rm(list=ls())
# 1
# loading required libraries
library(tidyverse)
library(readxl)
# 2
# loading the data skipping first 5 lines of input
d <- read_xlsx("./bc_trade.xlsx")
d
#setup workspace
graphics.off()
rm(list=ls())
# 1
# loading required libraries
library(tidyverse)
library(readxl)
# 2
# loading the data skipping first 5 lines of input
d <- read_xlsx("./bc_trade.xlsx", skip = 5)
# 3
# extracting the current names for columns 1 and 3
old_names <- names(d)[c(1,3)]
# renaming columns 1 and 3
d <- d |>
rename(month = old_names[1]) |>
rename(energy = old_names[2])
# 4.
# creating a color codes vector with the same length as the month column in d
# and initializing each value to "#cccccc"
color_codes <- rep("#cccccc", times = length(d$month))
# for those indices in color_codes matching the row numbers in the d$month
# column containing Jun, Jul or Aug, we set a value of "firebrick"
color_codes[d$month == "Jun" | d$month == "Jul" | d$month == "Aug"] <- "firebrick"
# 5.
# creating the bar graph
d$energy |>
barplot(names.arg = d$month,
col = color_codes, border = color_codes,
xlab = "Month", ylab = "Exports ($ thousands)",
main = "British Columbia Energy Exports")
