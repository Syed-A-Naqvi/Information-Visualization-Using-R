mpg |> ggplot(aes(x=displ,y=hwy,colour=factor(cyl), fill=factor(cyl)))+
geom_point()+
geom_smooth(method=lm,alpha=0.1)+
scale_x_continuous(name = "Engine Displacement(Litres)")+
scale_y_continuous(name = "Highway mileage (miles/gallon")+
ggtitle("THE LONG TITLE")+
labs(color='# of Cylinders')+guides(fill = FALSE)+
labs(caption = "Figure 1")
# Part 4 CORRELATION PLOTS
ggcorr(mtcars, label = TRUE, palette = "RdBu", nbreaks = 9,label_size=3.5,label_alpha = TRUE,
name = expression(Correlation~italic(rho) ))+ggtitle("PART 4")
map_data("country")
load('W6-8.RData')
map_packages <- c("tidygeocoder", "sf", "ozmaps", "maps", "mapdata",
"mapproj","rgdal","rmapshaper", "devtools")
install.packages(map_packages)
install.packages(map_packages)
map_data("country")
# loading Libaries
library(tidyverse)
library(maps)
library(socviz)
library(ggthemes)
map_packages <- c("tidygeocoder", "sf", "ozmaps", "maps", "mapdata",
"mapproj","rgdal","rmapshaper", "devtools")
install.packages(map_packages)
install.packages(map_packages)
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill=region))+
geom_polygon() +
coord_quickmap()
# loading Libaries
library(tidyverse)
library(socviz)
library(ggthemes)
d_ny<-map_data("state") |> filter(region =='new york') |>
select(lon = long, lat, group, region = subregion) |>
as_tibble()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill=region))+
geom_polygon() +
coord_quickmap()
b <- d |>
filter(group == 1) |>
ggplot(aes(x = lon, y = lat, group = group)) +
geom_polygon() +
coord_quickmap() +
ggtitle('polygon')
a + b +
plot_annotation("North island of New Zealand")
# View our data as a point plot
a <- d |>
filter(group == 1) |>
ggplot(aes(x = lon, y = lat, group = group)) +
geom_point(size = 0.25) +
coord_quickmap() +
ggtitle('dot plot')
b <- d |>
filter(group == 1) |>
ggplot(aes(x = lon, y = lat, group = group)) +
geom_polygon() +
coord_quickmap() +
ggtitle('polygon')
a + b +
plot_annotation("North island of New Zealand")
map_data("counties")
map_data("county")
map_data("county") |> filter(region =='new york')
d_ny<-map_data("county") |> filter(region =='new york') |>
select(lon = long, lat, group, region = subregion) |>
as_tibble()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill=region))+
geom_polygon() +
coord_quickmap()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill=region,colour="grey20"))+
geom_polygon() +
coord_quickmap()
d_ny<-map_data("county") |> filter(region =='new york') |>
select(lon = long, lat, group, region = subregion) |>
as_tibble()
d_ny
d_ny |>
ggplot(aes(x = lon, y = lat,group=group))+
geom_polygon(fill = region, colour = "grey20", linewidth = 0.2) +
coord_quickmap()
d_ny<-map_data("county") |> filter(region =='new york') |>
select(lon = long, lat, group, region = subregion) |>
as_tibble()
d_ny
d_ny |>
ggplot(aes(x = lon, y = lat,group=group))+
geom_polygon(fill = region, colour = "grey20", linewidth = 0.2) +
coord_quickmap()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = region))+
geom_polygon(colour = "grey20", linewidth = 0.2) +
coord_quickmap()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = region))+
geom_polygon(colour = "grey20", linewidth = 0.2) +
coord_quickmap()+scale_fill_viridis_c()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = region))+
geom_polygon(colour = "grey20", linewidth = 0.2) +
coord_quickmap()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = region))+
geom_polygon(colour = "grey20", linewidth = 0.2)
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = region))+
geom_polygon(colour = "grey20", linewidth = 0.2)+scale_fill_viridis_c()
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region))+
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+scale_fill_viridis_c()
d_ny |>
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+ coord_map()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+ coord_map()+scale_fill_viridis_d()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+ coord_map()+scale_fill_viridis_c()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+ coord_map()+scale_fill_viridis_C()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+
guides(fill = "none")+
coord_map()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+
guides(fill = "none")+
coord_map()+
scale_colour_viridis_d()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+
guides(fill = "none")+
coord_map()+
scale_colour_viridis_c()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+
scale_colour_viridis_c()+
guides(fill = "none")+
coord_map()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+
scale_colour_viridis_c()+
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+
scale_colour_viridis_c(option = "C")+
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+
guides(fill = "none")+coord_map()+scale_fill_viridis_C()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+
coord_map()+scale_fill_viridis_C()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+ coord_map()+scale_fill_viridis_C()
c
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+ coord_map()+scale_fill_viridis_c()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+ coord_map()+scale_fill_viridis_d()
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+ coord_map()+scale_fill_viridis_d(option="C")
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+
coord_map()+
scale_fill_viridis_d(option="C")+
guides(fill = "none")
d_ny |>
ggplot(aes(x = lon, y = lat,group=group,fill = factor(region)))+
geom_polygon(colour = "grey20", linewidth = 0.2)+
coord_map()+
scale_fill_viridis_d(option="C")+
guides(fill = "none")+
ggtitle("PART 5")
library(sf)
library( ozmaps)
ozmap_data('states')
view(ozmap_data('states'))
ozmap_data('states') |> filter(name!='Other Territories')
ozmap_data('states') |> filter(NAME!='Other Territories')
oz_states<-ozmap_data('states') |> filter(NAME!='Other Territories')
ggplot(oz_states)+geom_sf(aes(fill = NAME))+coord_sf(crs = st_crs(7844))
ggplot(oz_states)+
geom_sf(aes(fill = NAME,colour = 'grey20', linewidth = 0.2))+
coord_sf(crs = st_crs(7844))
ggplot(oz_states)+
geom_sf(aes(fill = NAME))+
colour = 'grey50', linewidth = 0.35)+
ggplot(oz_states)+
geom_sf(aes(fill = NAME))+
geom_sf(colour = 'grey50', linewidth = 0.35)+
coord_sf(crs = st_crs(7844))
# Overlay cities, city names, and state borders
p +
geom_sf(data = d_cities, size = 4, colour = "black", alpha = 0.75) +
geom_sf_label(data = d_cities, aes(label = name), nudge_x = 2.5, nudge_y = 0.5, alpha = 0.7) +
geom_sf(data = d_state, fill = NA, colour = 'grey50', linewidth = 0.35) +
theme(axis.title = element_blank(),
legend.position = "bottom")
# Visualise travel time
p <- ggplot() +
geom_sf(data = d_county, aes(fill = travel_time), colour = "gray85") +
scale_fill_gradient2(low = scales::muted("blue"),
mid = "white",
high = scales::muted("red"),
midpoint = median(d_county$travel_time),
name = "Travel time (mins)") +
coord_sf(crs = st_crs(4326)) +
#coord_sf(crs = st_crs('+proj=lcc +lat_1=50 +lat_2=70 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs')) +
labs(title = "Average travel time to work",
subtitle = 'WGS system')
p
#### 2. simple features ####
library(sf)
# Load North Carolina shape file from sf package
nc <- st_read(system.file("shape/nc.shp", package="sf"))
print(nc, n = 3)
nc
# Visualise NC data
ggplot(nc) +
geom_sf(aes(fill = BIR79)) +
scale_fill_viridis_c(name = "Live births") +
coord_sf(crs = st_crs(4326))
# Convert shape data from maps package to sf
d_county = st_as_sf(map('county', plot = FALSE, fill = TRUE))
# Join with fips to get fips codes, then join with our county-level survey data
d_county <- d_county |>
inner_join(county.fips, join_by(ID == polyname)) |>
left_join(county_data, join_by(fips == fips))
# Visualise travel time
p <- ggplot() +
geom_sf(data = d_county, aes(fill = travel_time), colour = "gray85") +
scale_fill_gradient2(low = scales::muted("blue"),
mid = "white",
high = scales::muted("red"),
midpoint = median(d_county$travel_time),
name = "Travel time (mins)") +
coord_sf(crs = st_crs(4326)) +
#coord_sf(crs = st_crs('+proj=lcc +lat_1=50 +lat_2=70 +lat_0=40 +lon_0=-96 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs')) +
labs(title = "Average travel time to work",
subtitle = 'WGS system')
p
# Grab state boundaries
d_state = st_as_sf(map('state', plot = FALSE, fill = TRUE))
# Convert US cities data to sf. Dropping Alaska and Hawaii
d_cities <- st_as_sf(us.cities, coords = c("long", "lat"), crs = 4326, remove = FALSE) |>
filter(!(country.etc %in% c("AK","HI")), pop > 4e5)
d_cities
# Grab state boundaries
d_state = st_as_sf(map('state', plot = FALSE, fill = TRUE))
# Convert US cities data to sf. Dropping Alaska and Hawaii
d_cities <- st_as_sf(us.cities, coords = c("long", "lat"), crs = 4326, remove = FALSE) |>
filter(!(country.etc %in% c("AK","HI")), pop > 4e5)
ggplot(oz_states)+
geom_sf(fill = NAME,colour = 'grey20', linewidth = 0.2)+
coord_sf(crs = st_crs(7844))
oz_states<-ozmap_data('states') |> filter(NAME!='Other Territories')
ggplot(oz_states)+
geom_sf(fill = NAME,colour = 'grey20', linewidth = 0.2)+
coord_sf(crs = st_crs(7844))
oz_states<-ozmap_data('states') |> filter(NAME!='Other Territories')
ggplot(oz_states)+
geom_sf(fill = NAME,colour = 'grey20', linewidth = 0.2)+
coord_sf(crs = st_crs(7844))
oz_states |> ggplot()+
geom_sf(fill = NAME,colour = 'grey20', linewidth = 0.2)+
coord_sf(crs = st_crs(7844))
ggplot(oz_states)+
geom_sf(aes(fill = NAME),colour = 'grey20', linewidth = 0.)+
coord_sf(crs = st_crs(7844))
ggplot(oz_states)+
geom_sf(aes(fill = NAME),colour = 'grey20', linewidth = 0.)+
geom_sf_label(aes(label = NAME), nudge_x = 2.5, nudge_y = 0.5, alpha = 0.7)+
coord_sf(crs = st_crs(7844))
ggplot(oz_states)+
geom_sf(aes(fill = NAME),colour = 'grey20', linewidth = 0.)+
geom_sf_label(aes(label = NAME), nudge_x = 1, nudge_y = 0.5, alpha = 0.7)+
coord_sf(crs = st_crs(7844))
ggplot(oz_states)+
geom_sf(aes(fill = NAME),colour = 'grey20', linewidth = 0.)+
geom_sf_label(aes(label = NAME), nudge_x = 1, nudge_y = 0.5, alpha = 0.7)+
scale_fill_viridis_d()
ggplot(oz_states)+
geom_sf(aes(fill = NAME),colour = 'grey20', linewidth = 0.)+
geom_sf_label(aes(label = NAME), nudge_x = 1, nudge_y = 0.5, alpha = 0.7)+
scale_fill_viridis_d()+
guides(fill = "none")
ggplot(oz_states)+
geom_sf(aes(fill = NAME),colour = 'grey20', linewidth = 0.)+
geom_sf_label(aes(label = NAME), nudge_x = 1, nudge_y = 0.5, alpha = 0.7)+
scale_fill_viridis_d()+
guides(fill = "none")+
coord_sf(crs = st_crs(7844))
ggplot(oz_states)+
geom_sf(aes(fill = NAME),colour = 'grey20', linewidth = 0.2)+
geom_sf_label(aes(label = NAME), nudge_x = 1, nudge_y = 0.5, alpha = 0.7)+
scale_fill_viridis_d()+
guides(fill = "none")+
coord_sf(crs = st_crs(7844))
ggplot(oz_states)+
geom_sf(aes(fill = NAME),colour = 'grey20', linewidth = 0.2)+
geom_sf_label(aes(label = NAME), nudge_x = 0.5, nudge_y = 0.5, alpha = 0.7)+
scale_fill_viridis_d()+
guides(fill = "none")+
coord_sf(crs = st_crs(7844))
ggplot(oz_states)+
geom_sf(aes(fill = NAME),colour = 'grey20', linewidth = 0.2)+
geom_sf_label(aes(label = NAME), nudge_x = 0.5, nudge_y = 0.5, alpha = 0.7)+
scale_fill_viridis_d()+
guides(fill = "none")+
coord_sf(crs = st_crs(7844))+
ggtitle("PART 6")
#### 1. Fixing common issues ####
d <- tibble(Area = c("Statistics", "Design", "Business", "Cartography",
"Information Science", "Web Analytics", "Programming",
"Engineering", "Mathematics", "Other"),
Votes = c(172, 136, 135, 101, 80, 68, 50, 29, 19, 41)) |>
mutate(VotesScaled = Votes/sum(Votes)*100,
Area = factor(Area, levels = Area))
# Sorted with alpha transparency
ggplot(d, aes(x="", y = VotesScaled, fill = Area, alpha = VotesScaled)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta ="y") +
xlab(NULL) +
ylab(NULL) +
guides(alpha=FALSE)
# Improved pie chart
ggplot(d, aes(x="", y = VotesScaled, alpha = VotesScaled)) +
geom_bar(width = 1, stat = "identity", fill = "#61041D", color = "aliceblue",
linewidth = 0.25) +
coord_polar(theta ="y") +
xlab(NULL) +
ylab(NULL) +
guides(alpha=FALSE)
# Coding challenge 1
d <- d |>
mutate(pal_alpha = alpha(replicate(n(), "#61041D"), seq(1, 0.2, length=n())))
# Final plot
ggplot(d, aes(x="", y = VotesScaled, fill = Area)) +
geom_bar(width = 1, stat = "identity", color = "aliceblue", linewidth = 0.25) +
coord_polar(theta ="y", direction = -1) +
xlab(NULL) +
ylab(NULL) +
scale_fill_manual(values = d$pal_alpha)
#### 2. Proportion timeseries ####
install.packages('gcookbook')
data(uspopage, package = 'gcookbook')
# Inspect data
glimpse(uspopage)
# Stacked proportion timeseries
ggplot(uspopage, aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area()
# Coding challenge 2
uspopage |>
ggplot(aes(x = Year, y = Thousands, fill = AgeGroup)) +
geom_area(colour = "black", linewidth = .2) +
scale_fill_brewer(palette="Blues") +
guides(fill = guide_legend(reverse = TRUE))
# part 3
d_p3
d_p3$Response |> replace(d_p3$Response==1,"Never")
d_p3
d_p3$Response<-d_p3$Response |> replace(d_p3$Response==1,"Never")
d_p3
d_p3$Response<-d_p3$Response |> replace(d_p3$Response==1,"Never") |>
replace(d_p3$Response==2,"Rarely")
d_p3
d_p3$Response<-d_p3$Response |> replace(d_p3$Response==1,"Never") |>
replace(d_p3$Response==2,"Rarely") |>
replace(d_p3$Response==3,"Sometimes") |>
replace(d_p3$Response==4,"Often") |>
replace(d_p3$Response==5,"Always")
d_p3
d_p3$Response<-factor(d_p3$Response)
d_p3
d_p3$Gender<-d_p3$Gender |> replace(d_p3$Gender==1,"women") |>
replace(d_p3$Gender==2,"men")
d_p3
d_p3$Response<-d_p3$Response |> replace(d_p3$Response==1,"Never") |>
replace(d_p3$Response==2,"Rarely") |>
replace(d_p3$Response==3,"Sometimes") |>
replace(d_p3$Response==4,"Often") |>
replace(d_p3$Response==5,"Always")
d_p3$Response<-factor(d_p3$Response)
d_p3$Gender<-d_p3$Gender |> replace(d_p3$Gender==1,"women") |>
replace(d_p3$Gender==2,"men")
d_p3$Gender<-factor(d_p3$Gender)
d_p3
d_p3 |> ggplot(aes(x="",y=Summary))+
geom_bar(width = 1, stat = "identity") +
coord_polar(theta ="y")
#### 1. Fixing common issues ####
d <- tibble(Area = c("Statistics", "Design", "Business", "Cartography",
"Information Science", "Web Analytics", "Programming",
"Engineering", "Mathematics", "Other"),
Votes = c(172, 136, 135, 101, 80, 68, 50, 29, 19, 41)) |>
mutate(VotesScaled = Votes/sum(Votes)*100,
Area = factor(Area, levels = Area))
# Sorted with alpha transparency
ggplot(d, aes(x="", y = VotesScaled, fill = Area, alpha = VotesScaled)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta ="y") +
xlab(NULL) +
ylab(NULL) +
guides(alpha=FALSE)
d_p3$Response<-d_p3$Response |> replace(d_p3$Response==1,"Never") |>
replace(d_p3$Response==2,"Rarely") |>
replace(d_p3$Response==3,"Sometimes") |>
replace(d_p3$Response==4,"Often") |>
replace(d_p3$Response==5,"Always")
d_p3$Response<-factor(d_p3$Response)
d_p3$Gender<-d_p3$Gender |> replace(d_p3$Gender==1,"women") |>
replace(d_p3$Gender==2,"men")
d_p3$Gender<-factor(d_p3$Gender)
d_p3
d_p3 |> ggplot(aes(x="",y=Summary))+
geom_bar(width = 1, stat = "identity") +
coord_polar(theta ="y")
d_p3 |> ggplot(aes(x="",y=Summary,fill=Response))+
geom_bar(width = 1, stat = "identity") +
coord_polar(theta ="y")
d_p3 |> ggplot(aes(x="",y=Summary,fill=Response))+
geom_bar(width = 1, stat = "identity") +
coord_polar(theta ="y")+facet_wrap(~Gender)
d_p3$Response<-d_p3$Response |> replace(d_p3$Response==1,"Never") |>
replace(d_p3$Response==2,"Rarely") |>
replace(d_p3$Response==3,"Sometimes") |>
replace(d_p3$Response==4,"Often") |>
replace(d_p3$Response==5,"Always")
d_p3$Response<-factor(d_p3$Response)
sort(d_p3$Response)
d_p3$Gender<-d_p3$Gender |> replace(d_p3$Gender==1,"women") |>
replace(d_p3$Gender==2,"men")
d_p3$Gender<-factor(d_p3$Gender)
d_p3
d_p3 |> ggplot(aes(x="",y=Summary,fill=Response))+
geom_bar(width = 1, stat = "identity") +
coord_polar(theta ="y")+facet_wrap(~Gender)
d_p3$Response<-d_p3$Response |> replace(d_p3$Response==1,"Never") |>
replace(d_p3$Response==2,"Rarely") |>
replace(d_p3$Response==3,"Sometimes") |>
replace(d_p3$Response==4,"Often") |>
replace(d_p3$Response==5,"Always")
d_p3$Response<-factor(d_p3$Response)
d_p3$Response<-sort(d_p3$Response)
d_p3$Gender<-d_p3$Gender |> replace(d_p3$Gender==1,"women") |>
replace(d_p3$Gender==2,"men")
d_p3$Gender<-factor(d_p3$Gender)
d_p3
d_p3 |> ggplot(aes(x="",y=Summary,fill=Response))+
geom_bar(width = 1, stat = "identity") +
coord_polar(theta ="y")+facet_wrap(~Gender)
d_p3$Response<-factor(d_p3$Response)
d_p3$Gender<-d_p3$Gender |> replace(d_p3$Gender==1,"women") |>
replace(d_p3$Gender==2,"men")
d_p3$Gender<-factor(d_p3$Gender)
d_p3
d_p3 |> ggplot(aes(x="",y=Summary,fill=Response))+
geom_bar(width = 1, stat = "identity") +
coord_polar(theta ="y")+facet_wrap(~Gender)
# part 3
m=c("Never","Rarely","Sometimes","Often","Always")
d_p3$Response<-d_p3$Response |> replace(d_p3$Response==1,"Never") |>
replace(d_p3$Response==2,"Rarely") |>
replace(d_p3$Response==3,"Sometimes") |>
replace(d_p3$Response==4,"Often") |>
replace(d_p3$Response==5,"Always")
d_p3$Response<-factor(d_p3$Response)
d_p3$Gender<-d_p3$Gender |> replace(d_p3$Gender==1,"women") |>
replace(d_p3$Gender==2,"men")
d_p3$Gender<-factor(d_p3$Gender)
d_p3
d_p3
# part 3
m=c("Never","Rarely","Sometimes","Often","Always")
d_p3$Response<-d_p3$Response |> replace(d_p3$Response==1,"Never") |>
replace(d_p3$Response==2,"Rarely") |>
replace(d_p3$Response==3,"Sometimes") |>
replace(d_p3$Response==4,"Often") |>
replace(d_p3$Response==5,"Always")
d_p3$Response<-factor(d_p3$Response)
d_p3$Gender<-d_p3$Gender |> replace(d_p3$Gender==1,"women") |>
replace(d_p3$Gender==2,"men")
d_p3$Gender<-factor(d_p3$Gender)
d_p3
d_p3 |> ggplot(aes(x="",y=Summary,fill=Response))+
geom_bar(width = 1, stat = "identity") +
coord_polar(theta ="y")+facet_wrap(~Gender)
